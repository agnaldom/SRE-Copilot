[tool:pytest]
# Configuração do pytest para testes do SRE Copilot

# Diretório de testes
testpaths = tests

# Padrão para descoberta de arquivos de teste
python_files = test_*.py

# Padrão para descoberta de classes de teste
python_classes = Test*

# Padrão para descoberta de funções de teste
python_functions = test_*

# Markers customizados
markers =
    unit: Testes unitários básicos
    integration: Testes de integração com serviços externos
    performance: Testes de performance e carga
    slow: Testes que demoram para executar (>5 segundos)
    datadog: Testes específicos para integração com Datadog
    kubernetes: Testes específicos para integração com Kubernetes
    slack: Testes específicos para integração com Slack
    teams: Testes específicos para integração com Teams

# Opções padrão
addopts = 
    --strict-markers
    --tb=short
    --maxfail=5
    -v
    --color=yes
    --durations=10
    --cov=.
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-fail-under=80

# Diretórios a ignorar
norecursedirs = 
    .git
    .tox
    dist
    build
    *.egg
    htmlcov
    __pycache__

# Configurações de warning
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:kubernetes.*

# Configurações específicas para testes
minversion = 6.0

# Configuração de timeouts (requer pytest-timeout)
timeout = 300
timeout_method = thread

# Log capture
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Configurações de cobertura de código
[coverage:run]
source = .
omit = 
    tests/*
    */tests/*
    setup.py
    */__pycache__/*
    */venv/*
    */env/*
    .tox/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov
